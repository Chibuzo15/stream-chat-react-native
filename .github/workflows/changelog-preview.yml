name: Changelog preview

on:
  pull_request:
    branches:
      - master
    types: [opened, synchronize]

jobs:
  generate_changelog_preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: lucas/tests
          # pulls all commits (needed for lerna / semantic release to correctly version)
          fetch-depth: '0'
      # pulls all tags (needed for lerna / semantic release to correctly version)
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'
      - name: Install Yarn
        run: npm install -g yarn
      - name: Installation
        run: yarn
      - name: Generate Changelog
        id: generate_changelog
        shell: bash
        run: |
          yarn lerna version prerelease --conventional-commits --conventional-prerelease --preid rc --no-git-tag-version --no-push --yes

          extractLastVersion () {
            PACKAGE_NAME=$(cat "$(dirname $1)/package.json" \
                | grep name \
                | head -1 \
                | mawk -F: '{ print $2 }' \
                | sed 's/[ ",]//g')
            PACKAGE_CHANGES="$(awk '$0 ~ ("^## \\[") { if (p) { exit }; p=1 } p' "$1")"
            echo "# $PACKAGE_NAME"
            echo ""
            echo "$PACKAGE_CHANGES"
            echo ""

          }

          git add --all

          echo "aqui2: $(git diff HEAD "*CHANGELOG.md")"

          echo "$(git diff HEAD --name-only "*CHANGELOG.md" | while read file; do extractLastVersion "$file"; done)"


          if [[ ! -z "${CHANGELOG_PREVIEW}" ]]; then
            echo "::set-output name=exists::true"
            echo "::set-output name=preview::$CHANGELOG_PREVIEW_ESCAPED"
          fi
      # - uses: marocchino/sticky-pull-request-comment@v2
      #   if: steps.generate_changelog.outputs.exists == 'true'
      #   env:
      #     header: changelog_preview
      #     MESSAGE: ${{ steps.generate_changelog.outputs.preview }}
      # - uses: marocchino/sticky-pull-request-comment@v2
      #   if: steps.generate_changelog.outputs.exists != 'true'
      #   with:
      #     header: changelog_preview
      #     message: No changelog generated for the current changes on this pull request.
